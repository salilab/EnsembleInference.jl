var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = EnsembleInference","category":"page"},{"location":"#EnsembleInference","page":"Home","title":"EnsembleInference","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [EnsembleInference]","category":"page"},{"location":"#EnsembleInference.DiffusionNormal","page":"Home","title":"EnsembleInference.DiffusionNormal","text":"DiffusionNormal{Tμ,TΣ,Te,TB,TD,TM<:Manifolds.AbstractGroupManifold} <:\nManifolds.MPointDistribution{TM}\n\nConstructor\n\nDiffusionNormal(\n    M::Manifolds.AbstractGroupManifold,\n    μ,\n    Σ,\n    e = Manifolds.Identity(M),\n    basis = Manifolds.DefaultOrthogonalBasis(),\n    direction = Manifolds.LeftAction()\n)\n\nConstruct a DiffusionNormal distribution on a group manifold M, with points represented with the same type as the identity element e, which may be user-specified. The mode of the distribution is at μ, and Σ is a diffusion matrix applied to the coordinates of the Lie algebra 𝔪 = Tₑ M using the orthogonal basis.\n\n\n\n\n\n","category":"type"},{"location":"#EnsembleInference.DiracDelta","page":"Home","title":"EnsembleInference.DiracDelta","text":"DiracDelta{T,TM<:Manifolds.Manifold} <: Manifolds.MPointDistribution{TM}\n\nDirac distribution around a point p, that is, a distribution whose support is a single point p on a manifold M.\n\nConstructor\n\nDiracDelta(M::Manifold, p)\n\n\n\n\n\n","category":"type"},{"location":"#EnsembleInference.Haar","page":"Home","title":"EnsembleInference.Haar","text":"Haar{T,TM<:Manifolds.AbstractGroupManifold} <: Manifolds.MPointDistribution{TM}\n\nHaar (invariant, i.e. uniform) measure on group manifold M.\n\nConstructor\n\nHaar(M::AbstractGroupManifold, p)\n\nConstructs a Haar distribution on the group manifold M with points represented like the provided point p, used for random sampling when implemented for compact groups.\n\n\n\n\n\n","category":"type"},{"location":"#EnsembleInference.inversion","page":"Home","title":"EnsembleInference.inversion","text":"inversion(d::Distribution)\n\nGiven a distribution d of elements g  G, where G is a group, the inversion of d is the corresponding distribution of g^-1.\n\n\n\n\n\n","category":"function"},{"location":"#EnsembleInference.kron_delta-Tuple{Any, Any}","page":"Home","title":"EnsembleInference.kron_delta","text":"kron_delta(i, j) -> Bool\n\nThe Kronecker delta function\n\nδ_ij = begincases\n    0  textif  i  j\n    1  textif  i = j\nendcases\n\n\n\n\n\n","category":"method"},{"location":"#EnsembleInference.representation_block-Tuple{EnsembleInference.LieAlgebra{Manifolds.SpecialOrthogonal{3}}, Any, Any}","page":"Home","title":"EnsembleInference.representation_block","text":"representation_block(::typeof(so3), X, ℓ)\n\nCompute the size (2ℓ+1, 2ℓ+1) block ℓ of the representation of the element X of the element of the Lie algebra 𝔰𝔬(3).\n\nThe representation is defined as\n\nu^ℓ(X) = lim_t  0 fracddt U^ℓ(exp(t X))\n\nwhere U^ℓ(R) is the representation of the rotation R, and exp(R) is the group exponential map on mathrmSO(3).\n\n\n\n\n\n","category":"method"},{"location":"#EnsembleInference.representation_block-Tuple{Manifolds.SpecialOrthogonal{3}, Any, Any}","page":"Home","title":"EnsembleInference.representation_block","text":"representation_block(::typeof(SO3), p, ℓ) -> Matrix{Complex}\n\nCompute the size (2ℓ+1, 2ℓ+1) block ℓ of the representation of the rotation p.\n\nThis block is identical to the D^ℓ block of the Wigner D-matrix using the conventions of [Varshalovich1988].\n\n[Varshalovich1988]: Varshalovich, D. A., Moskalev, A. N. & Khersonskii, V. K. Quantum Theory of Angular Momentum. 1988. World Scientific, Singapore. ISBN: 9971-5-0107-4.\n\nExamples\n\nTo create the \"little-d\" block d^ℓ(fracπ4) = D^ℓ(0 fracπ4 0),\n\njulia> using EnsembleInference, Rotations\n\njulia> EnsembleInference.representation_block(SO3, RotZXZ(0, π/2, 0), 1)\n3×3 Matrix{ComplexF64}:\n  0.5+0.0im              0.0-0.707107im  -0.5+0.0im\n  0.0-0.707107im  1.2175e-16+0.0im        0.0-0.707107im\n -0.5+0.0im              0.0-0.707107im   0.5+0.0im\n\njulia> EnsembleInference.representation_block(SO3, RotZXZ(0, π/2, 0), 2)\n5×5 Matrix{ComplexF64}:\n      0.25+0.0im   0.0-0.5im          -0.612372+0.0im           0.0+0.5im               0.25+0.0im\n       0.0-0.5im  -0.5-0.0im                0.0-3.24998e-16im  -0.5-0.0im                0.0+0.5im\n -0.612372-0.0im   0.0-2.41689e-16im       -0.5-0.0im           0.0-3.62534e-16im  -0.612372-0.0im\n       0.0+0.5im  -0.5+0.0im                0.0-2.03875e-16im  -0.5+0.0im                0.0-0.5im\n      0.25+0.0im   0.0+0.5im          -0.612372+0.0im           0.0-0.5im               0.25+0.0im\n\n\n\n\n\n","category":"method"}]
}
